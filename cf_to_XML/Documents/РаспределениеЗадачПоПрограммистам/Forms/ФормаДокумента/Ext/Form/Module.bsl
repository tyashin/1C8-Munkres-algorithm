#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьДеревоЗадачИПрограммистовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		ЗагрузитьДеревоЗадачИПрограммистовВТЧ(ТекущийОбъект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоЗадачИПрограммистов

&НаКлиенте
Процедура ДеревоЗадачИПрограммистовПередНачаломИзменения(Элемент, Отказ)
	Отказ = Элементы.ДеревоЗадачИПрограммистов.ТекущиеДанные.НомерСтроки = 0;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗадачИПрограммистовЗадачаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗадачИПрограммистовПрограммистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура КомандаРаспределитьЗадачиНаПрограммистовНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если Модифицированность Тогда
		ЗагрузитьДеревоЗадачИПрограммистовВТЧ(ДокументОбъект);
	КонецЕсли;
	
	ДокументОбъект.ВыполнитьРаспределениеЗадач();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура КомандаРаспределитьЗадачиНаПрограммистов(Команда)
	КомандаРаспределитьЗадачиНаПрограммистовНаСервере();
	ЗаполнитьДеревоЗадачИПрограммистовНаСервере()
КонецПроцедуры


//Процедура выполняет первоначальное заполнение и перезаполнение ТЧ "ЗадачиПоПрограммистам"
&НаСервере
Процедура ЗаполнитьТЧНаСервере()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросЗадач = Новый Запрос;
	ЗапросЗадач.Текст = 
	"ВЫБРАТЬ
	|	ПроектыИЗадачи.Ссылка КАК Задача
	|ИЗ
	|	Справочник.ПроектыИЗадачи КАК ПроектыИЗадачи
	|ГДЕ
	|	НЕ ПроектыИЗадачи.ПометкаУдаления
	|	И ПроектыИЗадачи.Родитель = &ТекущийПроект
	|	И НЕ ПроектыИЗадачи.ЭтоГруппа
	|	И НЕ ПроектыИЗадачи.Завершено";
	
	ЗапросЗадач.УстановитьПараметр("ТекущийПроект", Объект.Проект);
	РезультатЗапросаЗадач = ЗапросЗадач.Выполнить();
	Если РезультатЗапросаЗадач.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст =  "Отсутствуют задачи по выбранному проекту!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	МассивЗадач = Новый Массив;
	ВыборкаЗадач = РезультатЗапросаЗадач.Выбрать();
	Пока ВыборкаЗадач.Следующий() Цикл
		МассивЗадач.Добавить(ВыборкаЗадач.Задача);
	КонецЦикла;
	
	ЗапросИсполнителей = Новый Запрос;
	ЗапросИсполнителей.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Программист
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	НЕ Сотрудники.ПометкаУдаления
	|	И Сотрудники.ОсновнаяРольВПроектах = &РольПрограммист";
	
	ЗапросИсполнителей.УстановитьПараметр("РольПрограммист", Справочники.ПроектныеРоли.Программист);
	РезультатЗапросаИсполнителей = ЗапросИсполнителей.Выполнить();
	Если РезультатЗапросаИсполнителей.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "В Компании нет программистов!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	МассивИсполнителей = Новый Массив;
	ВыборкаИсполнителей = РезультатЗапросаИсполнителей.Выбрать();
	Пока ВыборкаИсполнителей.Следующий() Цикл
		МассивИсполнителей.Добавить(ВыборкаИсполнителей.Программист);
	КонецЦикла;
	
	Если МассивИсполнителей.Количество() > МассивЗадач.Количество() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Программистов больше чем задач. Задачи достанутся не всем.";
		Сообщение.Сообщить();
	ИначеЕсли  МассивИсполнителей.Количество() < МассивЗадач.Количество() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Задач больше чем программистов. Не все задачи будут распределены.";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РазмерностьМатрицы = Мин(МассивИсполнителей.Количество(),МассивЗадач.Количество());
	ТЧЗадачиПоПрограммистам =  ДокументОбъект.ЗадачиПоПрограммистам;
	ТЧЗадачиПоПрограммистам.Очистить();
	
	Для Инд = 0 По ДокументОбъект.РазмерностьМатрицы-1 Цикл
		Для Инд1 = 0 По ДокументОбъект.РазмерностьМатрицы-1 Цикл
			НоваяСтрокаТЧ = ТЧЗадачиПоПрограммистам.Добавить();
			НоваяСтрокаТЧ.Программист = МассивИсполнителей[Инд];
			НоваяСтрокаТЧ.Задача = МассивЗадач[Инд1];
		КонецЦикла;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

//Процедура звполняет ЭУ "ДеревоЗадачИПрограммистов" по данным в ТЧ "ЗадачиПоПрограммистам"
&НаСервере
Процедура ЗаполнитьДеревоЗадачИПрограммистовНаСервере()
	
	ДеревоЗадачИПрограммистов.ПолучитьЭлементы().Очистить();
	РабочееДерево = РеквизитФормыВЗначение("ДеревоЗадачИПрограммистов");
	ТЗЗадачиИПрограммисты = Объект.ЗадачиПоПрограммистам.Выгрузить();
	
	Для Каждого СтрокаТЗ Из ТЗЗадачиИПрограммисты Цикл
		СтрокаГруппировки = РабочееДерево.Строки.Найти(СтрокаТЗ.Задача, "Задача");
		
		Если СтрокаГруппировки = Неопределено Тогда
			СтрокаГруппировки = РабочееДерево.Строки.Добавить();
			СтрокаГруппировки.Задача = СтрокаТЗ.Задача;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаГруппировки.Строки.Добавить(), СтрокаТЗ);
		Если СтрокаТЗ.ЗадачаРаспределена Тогда
			ЗаполнитьЗначенияСвойств(СтрокаГруппировки,СтрокаТЗ,,"НомерСтроки");
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(РабочееДерево, "ДеревоЗадачИПрограммистов");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьДеревоЗадачИПрограммистов(Команда)
	Если Объект.ЗадачиПоПрограммистам.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Табличная часть будет очищена. Продолжить?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	ЗаполнитьТЧНаСервере();
	ЗаполнитьДеревоЗадачИПрограммистовНаСервере()
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДеревоЗадачИПрограммистовВТЧ(ТекущийОбъект)
	ТЧ = ТекущийОбъект.ЗадачиПоПрограммистам;
	ТекДерево = РеквизитФормыВЗначение("ДеревоЗадачИПрограммистов");
	Для Каждого УзелДерева Из ТекДерево.Строки Цикл
		Для Каждого ЛистДерева Из УзелДерева.Строки Цикл
			ТЧ[ЛистДерева.НомерСтроки-1].ПриоритетПрограммиста = ЛистДерева.ПриоритетПрограммиста;	
			ТЧ[ЛистДерева.НомерСтроки-1].ПриоритетМенеджера = ЛистДерева.ПриоритетМенеджера;	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти 